---
openapi: 3.0.0
paths:
  "/api/v1/auth/sign-up":
    post:
      operationId: AuthController_signUp
      summary: Allows the invited user to register in the system.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SignUpDto"
      responses:
        '201':
          description: Successfully registered in the system.
        '400':
          description: The code provided by the user does not match the one assigned
            to him by the administrator.
        '404':
          description: No valid invitation was found for the provided e-mail address.
        4XX:
          description: An error occurred while the user was logged in by AWS Cognito.
      tags:
        - "[HYDRO-GUARDIAN] Auth Module"
      security:
        - bearer: []
  "/api/v1/auth/sign-in":
    post:
      operationId: AuthController_signIn
      summary: Allows the user to sign-in in the system.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SingItDto"
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SignInExampleResponse"
        '201':
          description: The user has successfully logged in to the system.
        4XX:
          description: An error occurred while the user was logged in by AWS Cognito.
      tags:
        - "[HYDRO-GUARDIAN] Auth Module"
      security:
        - bearer: []
  "/api/v1/auth/current-user":
    get:
      operationId: AuthController_currentUser
      summary: Return current user data based on token payload.
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CurrentUserExampleResponse"
        '201':
          description: The user has successfully logged in to the system.
      tags:
        - "[HYDRO-GUARDIAN] Auth Module"
      security:
        - bearer: []
  "/api/v1/auth/create-invitation":
    post:
      operationId: AuthController_createInvitation
      summary: Allows authorized users to create invitations to the system.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateInvitationDto"
      responses:
        '201':
          description: An invitation has been successfully created for the user with
            the specified email address.
      tags:
        - "[HYDRO-GUARDIAN] Auth Module"
      security:
        - bearer: []
info:
  title: Hydro Guardian Web Backend
  description: The API for Hydro Guardian integration with IoT Process
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  schemas:
    SignUpDto:
      type: object
      properties:
        email:
          type: string
          example: john.doe@example.com
          description: Email linked to this account. This value should be equal to
            the one, that was provided on invitation creation step.
        password:
          type: string
          example: Abc123!Abc
          description: Password that should match default AWS Cognito Policy. https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-policies.html
        firstName:
          type: string
          example: John
          description: First name linked to this account.
        lastName:
          type: string
          example: Doe
          description: Last name linked to this account.
        invitationCode:
          type: string
          example: '635417'
          description: Invitation code that was generated by admin.
      required:
        - email
        - password
        - firstName
        - lastName
        - invitationCode
    SingItDto:
      type: object
      properties:
        email:
          type: string
          example: john.doe@example.com
          description: Email linked to this account. This value should be equal to
            the one, that was provided on invitation creation step.
        password:
          type: string
          example: Abc123!Abc
          description: Password that should match default AWS Cognito Policy. https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-policies.html
      required:
        - email
        - password
    SignInExampleResponse:
      type: object
      properties:
        jwtToken:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2Mjc5MjgyMzksInVzZXJSb2xlcyI6WyJBRE1JTiIsIkRCX1JFQUQiLCJEQl9XUklURSJdLCJ1c2VySWQiOjEyMzQ1LCJpYXQiOjE2Mjc5MjgxMTl9.8vTwsBOp8LSa0sdc0nWAUnmWAAgOnS0ElB3bfaiSRfQ
      required:
        - jwtToken
    CurrentUserExampleResponse:
      type: object
      properties:
        email:
          type: string
          example: john.doe@example.com
        emailVerified:
          type: boolean
          example: true
        username:
          type: string
          example: he68g365-e90b-3318-99c5-dd4dd1dce524
        role:
          type: string
          example: CUSTOMER
        familyName:
          type: string
          example: John
        givenName:
          type: string
          example: Doe
      required:
        - email
        - emailVerified
        - username
        - role
        - familyName
        - givenName
    CreateInvitationDto:
      type: object
      properties:
        email:
          type: string
          example: john.doe@example.com
          description: Email of the user we want to invite to create an account in
            the application.
      required:
        - email
